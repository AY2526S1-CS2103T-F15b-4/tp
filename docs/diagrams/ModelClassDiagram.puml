@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor MODEL_COLOR
skinparam classBackgroundColor MODEL_COLOR

Package Model as ModelPackage <<Rectangle>>{
    Class "<<interface>>\nReadOnlyAddressBook" as ReadOnlyAddressBook
    Class "<<interface>>\nReadOnlyUserPrefs" as ReadOnlyUserPrefs
    Class "<<interface>>\nModel" as Model
    Class AddressBook
    Class ModelManager
    Class UserPrefs

    Class UniquePersonList
    Class UniqueClubList
    Class UniqueMembershipList
    Class Person
    Class Club

    ' Updated Membership class with attributes
    Class Membership {
        - final person: Person
        - final club: Club
        - final joinDate: LocalDate
        - expiryDate: LocalDate
        - renewalHistory: List<LocalDate>
        - status: MembershipStatus
    }

    Enum MembershipStatus

    Class Address
    Class Email
    Class Name
    Class Phone
    Class Tag

    Class I #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Model

AddressBook .up.|> ReadOnlyAddressBook

ModelManager .up.|> Model
Model .right.> ReadOnlyUserPrefs
Model .left.> ReadOnlyAddressBook
ModelManager -left-> "1" AddressBook
ModelManager -right-> "1" UserPrefs
UserPrefs .up.|> ReadOnlyUserPrefs

AddressBook *--> "1" UniquePersonList
AddressBook *--> "1" UniqueClubList
AddressBook *--> "1" UniqueMembershipList

UniquePersonList --> "~* all" Person
Person *--> "1" Name
Person *--> "0..1" Phone
Person *--> "1" Email
Person *--> "0..1" Address
Person *--> "*" Tag

UniqueClubList --> "~* all" Club
Club *--> "1" Name
Club *--> "0..1" Phone
Club *--> "1" Email
Club *--> "0..1" Address
Club *--> "*" Tag

' Association class relationship
Person "*" -- "*" Club : member of >
(Club, Person) ..x Membership

UniqueMembershipList --> "~* all" Membership

Person -[hidden]up--> I
UniquePersonList -[hidden]right-> I

Name -[hidden]right-> Phone
Phone -[hidden]right-> Address
Address -[hidden]right-> Email

ModelManager --> "~* filtered" Person
@enduml
